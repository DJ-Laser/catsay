[package]
name = "djlaser_catsay_web"
version = "0.1.0"
authors.workspace = true
description.workspace = true
edition.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
djlaser_catsay = { path = "../djlaser_catsay/", features = ["cli"] } 
js-sys = "0.3.39"
wasm-bindgen = "0.2.62"
xterm-js-rs = { version = "0.1.0", features = ["xterm-addon-fit"] }
web-sys.version = "0.3.39"
web-sys.features = [
  'Document',
  'Element',
  'HtmlElement',
  'HtmlDivElement',
  'Node',
  'Window',
  'CssStyleDeclaration',
  'EventTarget',
  'MessageEvent',
]


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
clap = "4.5.23"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[features]
# default = ["console_error_panic_hook" ,"wee_alloc"]
default = ["console_error_panic_hook"]
